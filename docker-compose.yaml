version: "3.7" # https://docs.docker.com/compose/compose-file/compose-versioning/

services: 
  postgres:
    image: postgres # TODO: alpine?
    restart: always
    environment:
      POSTGRES_DB: inyoka
      POSTGRES_USER: inyoka
      POSTGRES_PASSWORD: inyoka
    # TODO: volume
    #volumes:
    #  - inyoka-postgres-data:/var/lib/postgresql/data

  inyoka:
    image: inyokaproject
    build:
      context: ./
      dockerfile: Dockerfile
    expose:
      - "8080/tcp"
    extra_hosts:
      - "ubuntuusers.local:127.0.0.1"
      - "forum.ubuntuusers.local:127.0.0.1"
      - "paste.ubuntuusers.local:127.0.0.1"
      - "wiki.ubuntuusers.local:127.0.0.1"
      - "planet.ubuntuusers.local:127.0.0.1"
      - "ikhaya.ubuntuusers.local:127.0.0.1"
      - "static.ubuntuusers.local:127.0.0.1"
      - "media.ubuntuusers.local:127.0.0.1"
    volumes:
      - ./theme-ubuntuusers:/inyoka/theme
      - ./inyoka:/inyoka/code
    environment:
      - INYOKA_ADMIN_PASSWORD=secret
    entrypoint:
      - bash
    command: # TODO use gunicorn
      - /start_inyoka.sh
    # TODO depends_on:

  # TODO in Docker the "Protected mode" is turned off by default. This means that if you expose the port outside of your host (e.g., via -p on docker run), it will be open without a password to anyone.
  redis:
    image: redis:alpine

  # TODO
  # celery-beat
  # celery

  # TODO: only dev
  theme-ubuntuusers:
    image: inyokaproject
    entrypoint:
      - bash
    command:
      - /build_statics.sh
    volumes:
      - ./theme-ubuntuusers:/inyoka/theme

# https://docs.docker.com/compose/compose-file/compose-file-v3/#volume-configuration-reference
#volumes:
#  inyoka-postgres-data: {}
